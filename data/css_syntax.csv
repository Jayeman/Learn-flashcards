    (1, 'Selector', '#id', 'Selects an element by its ID.'),
    (2, 'Selector', '.class', 'Selects elements with a specific class.'),
    (3, 'Selector', 'element', 'Selects all instances of a specific HTML element.'),
    (4, 'Selector', 'element, element', 'Selects multiple elements separated by commas.'),
    (5, 'Selector', 'element > child', 'Selects direct children of an element.'),
    (6, 'Selector', 'element child', 'Selects all descendants of an element.'),
    (7, 'Selector', 'element + sibling', 'Selects the next sibling of an element.'),
    (8, 'Selector', 'element ~ siblings', 'Selects all siblings of an element.'),
    (9, 'Selector', ':not(selector)', 'Selects elements that do not match the given selector.'),
    (10, 'Selector', '[attr=value]', 'Selects elements with a specific attribute and value.'),
    (11, 'Selector', ':nth-child(n)', 'Selects the nth child of a parent element.'),
    (12, 'Selector', ':nth-of-type(n)', 'Selects the nth child of a specific type.'),
    (13, 'Selector', ':last-child', 'Selects the last child of a parent element.'),
    (14, 'Selector', ':first-child', 'Selects the first child of a parent element.'),
    (15, 'Selector', ':nth-last-child(n)', 'Selects the nth-to-last child of a parent element.'),
    (16, 'Selector', ':nth-last-of-type(n)', 'Selects the nth-to-last element of a specific type.'),
    (17, 'Selector', '::before', 'Inserts content before an element.'),
    (18, 'Selector', '::after', 'Inserts content after an element.'),
    (19, 'Selector', '::selection', 'Applies styles to the portion of the element selected by the user.'),
    (20, 'Property', 'color: value;', 'Sets the text color of an element.'),
    (21, 'Property', 'background-color: value;', 'Sets the background color of an element.'),
    (22, 'Property', 'font-size: value;', 'Sets the font size of text.'),
    (23, 'Property', 'font-family: value;', 'Sets the font family of text.'),
    (24, 'Property', 'line-height: value;', 'Sets the amount of space between lines of text.'),
    (25, 'Property', 'letter-spacing: value;', 'Sets the spacing between characters in text.'),
    (26, 'Property', 'text-align: value;', 'Aligns the text inside an element (e.g., left, right, center, justify).'),
    (27, 'Property', 'text-shadow: value;', 'Applies shadow to text.'),
    (28, 'Property', 'margin: value;', 'Sets the outer space of an element.'),
    (29, 'Property', 'padding: value;', 'Sets the inner space of an element.'),
    (30, 'Property', 'border: width style color;', 'Sets the border of an element.'),
    (31, 'Property', 'border-radius: value;', 'Rounds the corners of an element.'),
    (32, 'Property', 'box-shadow: value;', 'Applies shadow to an element\'s box.'),
    (33, 'Property', 'display: value;', 'Specifies the display behavior of an element (e.g., block, inline, flex).'),
    (34, 'Property', 'visibility: value;', 'Specifies whether an element is visible or hidden (but still affects layout).'),
    (35, 'Property', 'position: value;', 'Specifies the positioning method of an element (e.g., relative, absolute, fixed, sticky).'),
    (36, 'Property', 'top: value;', 'Sets the vertical position of a positioned element.'),
    (37, 'Property', 'left: value;', 'Sets the horizontal position of a positioned element.'),
    (38, 'Property', 'width: value;', 'Sets the width of an element.'),
    (39, 'Property', 'height: value;', 'Sets the height of an element.'),
    (40, 'Property', 'z-index: value;', 'Specifies the stack order of elements.'),
    (41, 'Property', 'overflow: value;', 'Specifies how to handle content that overflows an element (e.g., visible, hidden, scroll).'),
    (42, 'Property', 'opacity: value;', 'Sets the transparency level of an element.'),
    (43, 'Property', 'transform: value;', 'Applies 2D or 3D transformations (e.g., rotate, scale).'),
    (44, 'Property', 'transition: property duration;', 'Specifies the transition effects for changes in properties.'),
    (45, 'Property', 'animation: name duration;', 'Applies an animation to an element.'),
    (46, 'Property', 'filter: value;', 'Applies graphical effects like blur or brightness to an element.'),
    (47, 'Property', 'object-fit: value;', 'Specifies how the content of a replaced element (like an image) should be resized to fit its box.'),
    (48, 'Media Query', '@media (condition) { styles }', 'Applies styles based on the screen size or device type.'),
    (49, 'Media Query', '@supports (property: value) { styles }', 'Applies styles if the browser supports a particular CSS feature.'),
    (50, 'Flexbox', 'display: flex;', 'Defines a flex container for layout.'),
    (51, 'Flexbox', 'flex-direction: value;', 'Defines the direction of items in a flex container (e.g., row, column).'),
    (52, 'Flexbox', 'justify-content: value;', 'Aligns items along the main axis in a flex container.'),
    (53, 'Flexbox', 'align-items: value;', 'Aligns items along the cross axis in a flex container.'),
    (54, 'Flexbox', 'align-self: value;', 'Aligns a specific flex item along the cross axis.'),
    (55, 'Grid', 'display: grid;', 'Defines a grid container for layout.'),
    (56, 'Grid', 'grid-template-columns: value;', 'Defines the columns in a grid layout.'),
    (57, 'Grid', 'grid-template-rows: value;', 'Defines the rows in a grid layout.'),
    (58, 'Grid', 'grid-gap: value;', 'Defines the space between grid items.'),
    (59, 'Grid', 'grid-column: start / end;', 'Defines how many columns an item should span in the grid.'),
    (60, 'Grid', 'grid-row: start / end;', 'Defines how many rows an item should span in the grid.'),
    (61, 'CSS Function', 'calc()', 'Performs mathematical calculations to determine CSS property values.'),
    (62, 'CSS Function', 'var(--name)', 'Uses a CSS custom property (variable).'),
    (63, 'CSS Function', 'clamp(min, value, max)', 'Limits a value within a range, between a minimum and maximum value.'),
    (64, 'CSS Function', 'min()', 'Takes the minimum of two values.'),
    (65, 'CSS Function', 'max()', 'Takes the maximum of two values.'),
    (66, 'Property', 'cursor: value;', 'Specifies the type of cursor to be displayed when hovering over an element.');
